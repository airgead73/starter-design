@use '../_variables/dimensions.scss' as d;

// set custom properties
@mixin cssvars($css_variables) {
  :root {
      @each $name, $value in $css_variables {
          --#{$name}: #{$value};
      }
  }
}

// set font face
@mixin font-face($name, $file, $style, $weight) {
  @font-face {
    font-family: '#{$name}';
    font-style: $style;
    font-weight: $weight;
    src: url('/fonts/#{$file}.eot'); // IE9 Compat Modes
    src: local('#{$name}'),
         url('/fonts/#{$file}.eot?#iefix') format('embedded-opentype'), // IE6-IE8
         url('/fonts/#{$file}.woff2') format('woff2'), // Super Modern Browsers
         url('/fonts/#{$file}.woff') format('woff'), // Modern Browsers
         url('/fonts/#{$file}.ttf') format('truetype'), // Safari, Android, iOS
         url('/fonts/#{$file}.svg#Oswald') format('svg'); // Legacy iOS
  }
}

// dimensions
@mixin container ($width: 98%) {
  width: $width;
  max-width: d.$container;
  margin: {
    left: auto;
    right: auto;
  }
}

@mixin p($top: null, $right: null, $bottom: null, $left: null) {
  @if $top != null {
    padding-top: $top;
  }
  @if $right != null {
    padding-right: $right;
  }
  @if $bottom != null {
    padding-bottom: $bottom;
  }
  @if $left != null {
    padding-left: $left;
  }
}

@mixin m($top: null, $right: null, $bottom: null, $left: null) {
  @if $top != null {
    margin-top: $top;
  }
  @if $right != null {
    margin-right: $right;
  }
  @if $bottom != null {
    margin-bottom: $bottom;
  }
  @if $left != null {
    margin-left: $left;
  }
}

@mixin absolute($top: auto, $right: auto, $bottom: auto, $left: auto) {
  position: absolute;
  top: $top;
  bottom: $bottom;
  left: $left;
  right: $right;
}