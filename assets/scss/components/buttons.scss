/* Buttons
–––––––––––––––––––––––––––––––––––––––––––––––––– */
@use '../abstracts/tools' as *;
@use '../abstracts/variables/root' as r;
@use './links.scss' as *;
@use 'sass:color';

@mixin btnCommon() {
  border-radius: 8px;
  text-transform: uppercase;
  font-size: .65rem;
  line-height: 1;
  padding: 14px 16px;
  white-space: nowrap;
  cursor: pointer;
  vertical-align: baseline;
}

@mixin btnSolid($color: clr(primary)) {
  @include btnCommon();
  @include setBG($color);
  transition-property: background-color, color;
  transition-duration: .26s;
  &:hover {
    @include setBG(color.invert($color))
  }
}

@mixin btnOutline($color: clr(primary)) {
  $lightness: lightness($color);
  @include btnCommon();
  
  @if($lightness > 50) {
    color: mix(black, $color, 50%);
  } @else {
    color: $color;
  }
  background-color: white;
  border-width: 2px;
  border-style: solid;
  border-color: $color;
  transition-property: background-color, color;
  transition-duration: .26s;
  &:hover {
    @include setBG($color);
  }
}

.btn {
  @include btnSolid(clr(primary));
 }

.btn--green {
  @include btnSolid(clr(green));
}

.btn--red {
  @include btnSolid(clr(red));
}

.btn--blue {
  @include btnSolid(clr(blue));
}

.btn--orange {
  @include btnSolid(clr(orange));
}

.btn--yellow {
  @include btnSolid(clr(yellow));
}

.btn--black {
  @include btnSolid(clr(black));
}

.btn--outline {
  @include btnOutline(clr(primary));
 }

.btn--outline--green {
  @include btnOutline(clr(green));
}

.btn--outline--red {
  @include btnOutline(clr(red));
}

.btn--outline--blue {
  @include btnOutline(clr(blue));
}

.btn--outline--orange {
  @include btnOutline(clr(orange));
}

.btn--outline--yellow {
  @include btnOutline(clr(yellow));
}

.btn--outline--black {
  @include btnOutline(clr(black));
}